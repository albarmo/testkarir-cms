{"ast":null,"code":"import _regeneratorRuntime from \"/home/albarm/Desktop/Projects/Teskarir/testkarir-cms/teskarir-cms/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/albarm/Desktop/Projects/Teskarir/testkarir-cms/teskarir-cms/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/home/albarm/Desktop/Projects/Teskarir/testkarir-cms/teskarir-cms/components/Todo.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport \"todomvc-common/base.css\";\nimport \"todomvc-app-css/index.css\";\nimport \"todomvc-common/base\";\nimport React from \"react\";\nimport qoreContext from \"../utils/qoreContext\";\nimport TodoItem from \"./TodoItem\";\n\nvar Todo = function Todo() {\n  _s();\n\n  var taskInputRef = React.useRef(null);\n  var tasks = qoreContext.views.toDoDefaultView.useListRow({\n    limit: 100,\n    order: \"asc\"\n  }, {\n    pollInterval: 5000\n  });\n\n  var _qoreContext$view$use = qoreContext.view(\"allMembers\").useListRow({\n    limit: 10,\n    order: \"asc\"\n  }, {\n    pollInterval: 5000\n  }),\n      allMembers = _qoreContext$view$use.data;\n\n  console.log(allMembers, \"<<< ini all members\");\n  var insertTask = qoreContext.views.toDoDefaultView.useInsertRow();\n  var handleAddTask = React.useCallback( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(e.key === \"Enter\")) {\n                _context.next = 5;\n                break;\n              }\n\n              _context.next = 3;\n              return insertTask.insertRow({\n                task: e.currentTarget.value,\n                done: false,\n                description: e.currentTarget.value,\n                deadline: new Date(),\n                points: 0\n              });\n\n            case 3:\n              tasks.revalidate();\n              if (taskInputRef.current) taskInputRef.current.value = \"\";\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }(), []);\n  return __jsx(React.Fragment, null, __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, allMembers.map(function (user) {\n    return __jsx(\"li\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }, user.email);\n  })), __jsx(\"section\", {\n    className: \"todoapp\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, __jsx(\"header\", {\n    className: \"header\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, \"todos\"), __jsx(\"input\", {\n    onKeyPress: handleAddTask,\n    className: \"new-todo\",\n    placeholder: \"What needs to be done?\",\n    autoFocus: true,\n    disabled: insertTask.status === \"loading\",\n    ref: taskInputRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  })), __jsx(\"section\", {\n    className: \"main\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    id: \"toggle-all\",\n    className: \"toggle-all\",\n    type: \"checkbox\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }), __jsx(\"label\", {\n    htmlFor: \"toggle-all\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, \"Mark all as complete\"), __jsx(\"ul\", {\n    className: \"todo-list\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, tasks.data.map(function (task) {\n    return __jsx(TodoItem, {\n      task: task,\n      key: task.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    });\n  }))), __jsx(\"footer\", {\n    className: \"footer\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    className: \"todo-count\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, __jsx(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, \"0\"), \" item left\"), __jsx(\"ul\", {\n    className: \"filters\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    className: \"selected\",\n    href: \"#/\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, \"All\")), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    href: \"#/active\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }, \"Active\")), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    href: \"#/completed\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, \"Completed\"))), __jsx(\"button\", {\n    className: \"clear-completed\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, \"Clear completed\"))), __jsx(\"footer\", {\n    className: \"info\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, \"Double-click to edit a todo\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, \"Template by \", __jsx(\"a\", {\n    href: \"http://sindresorhus.com\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 23\n    }\n  }, \"Sindre Sorhus\")), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, \"Created by \", __jsx(\"a\", {\n    href: \"http://todomvc.com\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 22\n    }\n  }, \"you\")), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, \"Part of \", __jsx(\"a\", {\n    href: \"http://todomvc.com\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 19\n    }\n  }, \"TodoMVC\"))));\n};\n\n_s(Todo, \"oOrDeS0wkJJZCNNWg4grzogSI4s=\", true);\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/home/albarm/Desktop/Projects/Teskarir/testkarir-cms/teskarir-cms/components/Todo.tsx"],"names":["React","qoreContext","TodoItem","Todo","taskInputRef","useRef","tasks","views","toDoDefaultView","useListRow","limit","order","pollInterval","view","allMembers","data","console","log","insertTask","useInsertRow","handleAddTask","useCallback","e","key","insertRow","task","currentTarget","value","done","description","deadline","Date","points","revalidate","current","map","user","email","status","id"],"mappings":";;;;;;;;AAAA,OAAO,yBAAP;AACA,OAAO,2BAAP;AACA,OAAO,qBAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AACjB,MAAMC,YAAY,GAAGJ,KAAK,CAACK,MAAN,CAA+B,IAA/B,CAArB;AACA,MAAMC,KAAK,GAAGL,WAAW,CAACM,KAAZ,CAAkBC,eAAlB,CAAkCC,UAAlC,CACZ;AAAEC,IAAAA,KAAK,EAAE,GAAT;AAAcC,IAAAA,KAAK,EAAE;AAArB,GADY,EAEZ;AAAEC,IAAAA,YAAY,EAAE;AAAhB,GAFY,CAAd;;AAFiB,8BAOYX,WAAW,CACrCY,IAD0B,CACrB,YADqB,EAE1BJ,UAF0B,CAEf;AAAEC,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,KAAK,EAAE;AAApB,GAFe,EAEc;AAAEC,IAAAA,YAAY,EAAE;AAAhB,GAFd,CAPZ;AAAA,MAOHE,UAPG,yBAOTC,IAPS;;AAWjBC,EAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ,EAAwB,qBAAxB;AACA,MAAMI,UAAU,GAAGjB,WAAW,CAACM,KAAZ,CAAkBC,eAAlB,CAAkCW,YAAlC,EAAnB;AACA,MAAMC,aAAa,GAAGpB,KAAK,CAACqB,WAAN;AAAA,wEACpB,iBAAOC,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA,oBACMA,CAAC,CAACC,GAAF,KAAU,OADhB;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAEUL,UAAU,CAACM,SAAX,CAAqB;AACzBC,gBAAAA,IAAI,EAAEH,CAAC,CAACI,aAAF,CAAgBC,KADG;AAEzBC,gBAAAA,IAAI,EAAE,KAFmB;AAGzBC,gBAAAA,WAAW,EAAEP,CAAC,CAACI,aAAF,CAAgBC,KAHJ;AAIzBG,gBAAAA,QAAQ,EAAE,IAAIC,IAAJ,EAJe;AAKzBC,gBAAAA,MAAM,EAAE;AALiB,eAArB,CAFV;;AAAA;AASI1B,cAAAA,KAAK,CAAC2B,UAAN;AACA,kBAAI7B,YAAY,CAAC8B,OAAjB,EAA0B9B,YAAY,CAAC8B,OAAb,CAAqBP,KAArB,GAA6B,EAA7B;;AAV9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADoB;;AAAA;AAAA;AAAA;AAAA,OAcpB,EAdoB,CAAtB;AAgBA,SACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGb,UAAU,CAACqB,GAAX,CAAe,UAACC,IAAD;AAAA,WACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,IAAI,CAACC,KAAV,CADc;AAAA,GAAf,CADH,CADF,EAME;AAAS,IAAA,SAAS,EAAC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AACE,IAAA,UAAU,EAAEjB,aADd;AAEE,IAAA,SAAS,EAAC,UAFZ;AAGE,IAAA,WAAW,EAAC,wBAHd;AAIE,IAAA,SAAS,MAJX;AAKE,IAAA,QAAQ,EAAEF,UAAU,CAACoB,MAAX,KAAsB,SALlC;AAME,IAAA,GAAG,EAAElC,YANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAYE;AAAS,IAAA,SAAS,EAAC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,EAAE,EAAC,YAAV;AAAuB,IAAA,SAAS,EAAC,YAAjC;AAA8C,IAAA,IAAI,EAAC,UAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAO,IAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFF,EAGE;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,KAAK,CAACS,IAAN,CAAWoB,GAAX,CAAe,UAACV,IAAD;AAAA,WACd,MAAC,QAAD;AAAU,MAAA,IAAI,EAAEA,IAAhB;AAAsB,MAAA,GAAG,EAAEA,IAAI,CAACc,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADc;AAAA,GAAf,CADH,CAHF,CAZF,EAqBE;AAAQ,IAAA,SAAS,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,eADF,EAIE;AAAI,IAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,UAAb;AAAwB,IAAA,IAAI,EAAC,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,CADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,IAAI,EAAC,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CANF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,IAAI,EAAC,aAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CATF,CAJF,EAiBE;AAAQ,IAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAjBF,CArBF,CANF,EA+CE;AAAQ,IAAA,SAAS,EAAC,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACc;AAAG,IAAA,IAAI,EAAC,yBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADd,CAFF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACa;AAAG,IAAA,IAAI,EAAC,oBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADb,CALF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACU;AAAG,IAAA,IAAI,EAAC,oBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADV,CARF,CA/CF,CADF;AA8DD,CA3FD;;GAAMpC,I;;KAAAA,I;AA6FN,eAAeA,IAAf","sourcesContent":["import \"todomvc-common/base.css\";\nimport \"todomvc-app-css/index.css\";\nimport \"todomvc-common/base\";\nimport React from \"react\";\nimport qoreContext from \"../utils/qoreContext\";\nimport TodoItem from \"./TodoItem\";\n\nconst Todo = () => {\n  const taskInputRef = React.useRef<HTMLInputElement>(null);\n  const tasks = qoreContext.views.toDoDefaultView.useListRow(\n    { limit: 100, order: \"asc\" },\n    { pollInterval: 5000 }\n  );\n\n  const { data: allMembers } = qoreContext\n    .view(\"allMembers\")\n    .useListRow({ limit: 10, order: \"asc\" }, { pollInterval: 5000 });\n\n  console.log(allMembers, \"<<< ini all members\");\n  const insertTask = qoreContext.views.toDoDefaultView.useInsertRow();\n  const handleAddTask = React.useCallback(\n    async (e: React.KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === \"Enter\") {\n        await insertTask.insertRow({\n          task: e.currentTarget.value,\n          done: false,\n          description: e.currentTarget.value,\n          deadline: new Date(),\n          points: 0,\n        });\n        tasks.revalidate();\n        if (taskInputRef.current) taskInputRef.current.value = \"\";\n      }\n    },\n    []\n  );\n  return (\n    <>\n      <ul>\n        {allMembers.map((user) => (\n          <li>{user.email}</li>\n        ))}\n      </ul>\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n          <input\n            onKeyPress={handleAddTask}\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            autoFocus\n            disabled={insertTask.status === \"loading\"}\n            ref={taskInputRef}\n          />\n        </header>\n        <section className=\"main\">\n          <input id=\"toggle-all\" className=\"toggle-all\" type=\"checkbox\" />\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n          <ul className=\"todo-list\">\n            {tasks.data.map((task) => (\n              <TodoItem task={task} key={task.id} />\n            ))}\n          </ul>\n        </section>\n        <footer className=\"footer\">\n          <span className=\"todo-count\">\n            <strong>0</strong> item left\n          </span>\n          <ul className=\"filters\">\n            <li>\n              <a className=\"selected\" href=\"#/\">\n                All\n              </a>\n            </li>\n            <li>\n              <a href=\"#/active\">Active</a>\n            </li>\n            <li>\n              <a href=\"#/completed\">Completed</a>\n            </li>\n          </ul>\n          <button className=\"clear-completed\">Clear completed</button>\n        </footer>\n      </section>\n      <footer className=\"info\">\n        <p>Double-click to edit a todo</p>\n        <p>\n          Template by <a href=\"http://sindresorhus.com\">Sindre Sorhus</a>\n        </p>\n        <p>\n          Created by <a href=\"http://todomvc.com\">you</a>\n        </p>\n        <p>\n          Part of <a href=\"http://todomvc.com\">TodoMVC</a>\n        </p>\n      </footer>\n    </>\n  );\n};\n\nexport default Todo;\n"]},"metadata":{},"sourceType":"module"}