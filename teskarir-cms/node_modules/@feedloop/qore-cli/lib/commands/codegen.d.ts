import { Command, flags } from "@oclif/command";
import { APIField } from "@feedloop/qore-sdk/lib/project/index";
import { CLIConfig } from "../config";
export declare type QoreRC = {
    version: string;
    endpoint: string;
    projectId: string;
    organizationId: string;
    authenticationId?: string;
};
export default class Codegen extends Command {
    static warningMessage: string;
    static description: string;
    static examples: string[];
    static flags: {
        path: flags.IOptionFlag<string | undefined>;
        token: flags.IFlag<string>;
        project: flags.IFlag<string>;
        org: flags.IFlag<string>;
    };
    static loadRc: (destination: string) => Promise<QoreRC | null>;
    static loadConfigFromRc: (destination: string) => Promise<{
        project: string;
        org: string;
    } | null>;
    static writeConfigFile: (configs: CLIConfig, destination?: string | undefined) => Promise<void>;
    private writeFieldTypes;
    readFieldType(field: APIField): string | undefined;
    writeFieldType(field: APIField): string;
    isWriteField(field: APIField): boolean;
    run(): Promise<void>;
}
