"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const nock_record_1 = require("nock-record");
const fs_1 = tslib_1.__importDefault(require("fs"));
const fs_extra_1 = tslib_1.__importDefault(require("fs-extra"));
const path_1 = tslib_1.__importDefault(require("path"));
const codegen_1 = tslib_1.__importDefault(require("./codegen"));
const config_1 = tslib_1.__importDefault(require("../config"));
const record = nock_record_1.setupRecorder();
describe("codegen", () => {
    beforeEach(() => {
        config_1.default.reset("org", "project", "token");
    });
    it("should be able to generate codegen", async () => {
        process.env.QORE_SERVER =
            "https://p-qore-dot-pti-feedloop.et.r.appspot.com";
        const { completeRecording } = await record("codegen");
        await codegen_1.default.run([
            "--project",
            "I0D3NimZQ9GKEDP",
            "--org",
            "lIdfC42DJCN2XzQ",
            "--token",
            "3960f3b8-a139-42eb-8295-3d669e4da4c9",
            "--path",
            "codegen-dest"
        ]);
        completeRecording();
        const qoreGenerated = path_1.default.resolve(process.cwd(), "codegen-dest", "qore-env.d.ts");
        expect(fs_extra_1.default.readFileSync(qoreGenerated, { encoding: "utf-8" })).toMatchSnapshot();
        fs_1.default.unlinkSync(qoreGenerated);
        const qoreConfig = path_1.default.resolve(process.cwd(), "codegen-dest", "qore.config.json");
        expect(await fs_extra_1.default.readJSON(qoreConfig)).toMatchSnapshot();
        fs_1.default.unlinkSync(qoreConfig);
        const qoreSchema = path_1.default.resolve(process.cwd(), "codegen-dest", "qore.schema.json");
        expect(await fs_extra_1.default.readJSON(qoreSchema)).toMatchSnapshot();
        fs_1.default.unlinkSync(qoreSchema);
    });
});
